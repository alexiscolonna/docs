{
  
  "openapi": "3.0.1",
  "info": {
    "title": "Qobra API",
    "description": "The API Reference to access all endpoints available to Qobra's users",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.qobra.co/v1/"
    }
  ],
  "security": [
    {
      "apiKey": []
    }
  ],
  "paths": {
    "/tables/{table-api-name}/records": {
      "get": {
        "description": "Retrieves table records data",
        "parameters": [
          {
            "name": "table-api-name",
            "in": "path",
            "description": "ID of table",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of results to return",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 200,
              "minimum": 0,
              "maximum":200
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Position of the first value to return",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0,
              "minimum": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Table found",
            "content": {
                "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Plant"
                  }
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/tables/imports/{import_id}": {
      "get": {
        "description": "Retrieves information about an import",
        "parameters": [
          {
            "name": "import_id",
            "in": "path",
            "description": "ID of the import",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Import found",
            "content": {
                "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/Import"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/tables/{table-api-name}/records/ingest": {
    "post": {
    "description": "Imports data into Qobra",
    "parameters": [
        {
        "name": "table-api-name",
        "in": "path",
        "description": "ID of table",
        "required": true,
        "schema": {
            "type": "string"
        }
        },
        {
        "name": "all",
        "in": "query",
        "description": "If the parameter is true, the request will delete all the data table content, before doing the import",
        "required": false,
        "schema": {
            "type": "boolean"
        }
        },
        {
        "name": "debounce",
        "in": "query",
        "description": "Number of seconds we wait before launching imports. This query parameter is used in conjunction with the all query parameter. If you want to push a large number of records, but delete the data tables records before, this debounce system will enable you to split this large amount in several requests. ",
        "required": false,
        "schema": {
            "type": "integer",
            "format": "int32"
        }
        }
    ],
    "requestBody" : {
        "description":"The body is a json list of records you want to push to Qobra.",
        "required":true

    },
    "responses": {
        "200": {
        "description": "Table found",
        "content": {
            "application/json": {
            "schema": {
                "$ref": "#/components/schemas/ImportResponse"
            }
            }
        }
        },
        "400": {
        "description": "unexpected error",
        "content": {
            "application/json": {
            "schema": {
                "$ref": "#/components/schemas/Error"
            }
            }
        }
        }
    }
    }

  },
  "components": {
    "schemas": {
      "Plant": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the plant",
            "type": "string"
          },
          "tag": {
            "description": "Tag to specify the type",
            "type": "string"
          }
        }
      },
      "Import": {
        "required": [
          "import_id"
        ],
        "type": "object",
        "properties": {
          "import_id": {
            "description": "the id of the import you want to retrieve data of",
            "type": "string"
          },
          "data_import": {
            "description": "The data about the import",
            "type": "string"
          }
        }
      },
      "ImportResponse": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "import_id": {
            "description": "unique identifier of the import you created",
            "type": "string"
          },
          "objects_imported": {
            "description": "number of records your request contained",
            "type": "integer"
          }
        }
      },
      "NewPlant": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Plant"
          },
          {
            "required": [
              "id"
            ],
            "type": "object",
            "properties": {
              "id": {
                "description": "Identification number of the plant",
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ]
      },
      "Error": {
        "required": [
          "error",
          "message"
        ],
        "type": "object",
        "properties": {
          "error": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "apiKey": {
        "type": "apiKey",
        "name": "X-API-Key",
        "in": "header"
      }
    }
  }
}

}